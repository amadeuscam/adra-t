# This is a basic workflow to help you get started with Actions

name: Django Test

on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_USER: root
          MYSQL_DATABASE: adra_torrejon_new
        ports: [ '3306:3306' ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      #      - name: Coverage report
      #        run: |
      #          pip install coverage
      #          coverage run manage.py test
      #          coverage report

      - name: Run Migrations
        run: python manage.py migrate
        env:
          SECRET_KEY: hola
          SENDGRID_API_KEY: hola
          sentry_sdk_key_url: hola
          mysql_user: root
          mysql_password: ${{ job.services.mysql.env.MYSQL_ROOT_PASSWORD }}
          telegram_token: hola
          Token_KEY_USER: hola
          DBENGINE: django.db.backends.mysql
          DBNAME: adra_torrejon_new
          DBUSER: root
          DBPASSWORD: ${{ job.services.mysql.env.MYSQL_ROOT_PASSWORD }}
          DBHOST: 127.0.0.1
          DBPORT: ${{ job.services.mysql.ports[3306] }}

      - name: Django testing
        env:
          SECRET_KEY: hola
          SENDGRID_API_KEY: hola
          sentry_sdk_key_url: hola
          mysql_user: root
          mysql_password: ${{ job.services.mysql.env.MYSQL_ROOT_PASSWORD }}
          telegram_token: hola
          Token_KEY_USER: hola
          DBENGINE: django.db.backends.mysql
          DBNAME: adra_torrejon_new
          DBUSER: root
          DBPASSWORD: ${{ job.services.mysql.env.MYSQL_ROOT_PASSWORD }}
          DBHOST: 127.0.0.1
          DBPORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          python3 manage.py test

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Adra App Digital Ocean
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: ${{ secrets.SSH_USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}

          script: |
            cd /home/lucian/adra-t/
            git pull
            echo 'masina' | sudo -S  supervisorctl restart  gunicorn
            echo 'Deployment successful to digital ocean'